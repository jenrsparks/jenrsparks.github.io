<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jen Sparks</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2019-09-02T12:15:00-05:00</updated><subtitle>A personal playground</subtitle><entry><title>Labor Day Weekend</title><link href="/labor-day-weekend.html" rel="alternate"></link><published>2019-09-02T12:15:00-05:00</published><updated>2019-09-02T12:15:00-05:00</updated><author><name>Jen Sparks</name></author><id>tag:None,2019-09-02:/labor-day-weekend.html</id><summary type="html">&lt;p&gt;It's a three-day weekend, and what does that mean? Well, probably getting sick, because the universe is cruel. But that aside, it's actually been quite a relaxing one - we had D&amp;amp;D on Saturday, and shortly before I discovered a &lt;em&gt;very&lt;/em&gt; cool React project called &lt;a href="https://dukeflipchart.github.io/dndspells/"&gt;The Spells of D&amp;amp;D …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's a three-day weekend, and what does that mean? Well, probably getting sick, because the universe is cruel. But that aside, it's actually been quite a relaxing one - we had D&amp;amp;D on Saturday, and shortly before I discovered a &lt;em&gt;very&lt;/em&gt; cool React project called &lt;a href="https://dukeflipchart.github.io/dndspells/"&gt;The Spells of D&amp;amp;D 5e&lt;/a&gt;. It was &lt;em&gt;almost&lt;/em&gt; perfect... and hey, I've never played with React before, so why not give it a spin?&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;Backing up a bit - I'm a visualization nerd. Before landing completely in software engineering, I had planned to blend graphic design and programming, two things I'd fallen in love with as a kid.&lt;/p&gt;
&lt;p&gt;So here I am, poking at my news feed on Saturday morning, and this &lt;em&gt;absolutely gorgeous&lt;/em&gt; interactive infographic shows up. What's a girl to do? Share it with the rest of her nerdy friends, of course.&lt;/p&gt;
&lt;p&gt;It wasn't long before I poked at the source code. From what I could initially see (despite knowing absolutely nothing of node.js or React), &lt;a href="http://github.com/dukeflipchart"&gt;dukeflipchart&lt;/a&gt; had started with a &lt;a href="https://github.com/facebook/create-react-app"&gt;Create React App&lt;/a&gt;, interleaved some specific logic, and integrated the JSON he generated via &lt;a href="https://www.reddit.com/r/DnD/comments/2qs89e/5e_spell_reference_sheets_are_done/"&gt;u/Zolo49's spell spreadsheet&lt;/a&gt;. He's got a pretty solid explanation of the process on the original page; check it out if you're interested.&lt;/p&gt;
&lt;p&gt;Personally, I wanted to get my hands dirty, so in my Chromebook fashion, I spun up a Codenvy NodeJS project, forked his project, imported it, and got to poking. The scaffolding for leveling, which felt like a really obvious additional filter to be made available.&lt;/p&gt;
&lt;p&gt;The biggest changes to make were:
- Add another &lt;code&gt;HighlightLabel&lt;/code&gt; section for the levels
- Add functionality for the new section's &lt;code&gt;onClick&lt;/code&gt; behavior
- Change the &lt;code&gt;getHighlightColors&lt;/code&gt; logic to consider both the casters and the levels
- Update the logic behind &lt;code&gt;hasOpacity&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;That last one took &lt;em&gt;way&lt;/em&gt; longer than I'd like to admit. I probably spent a couple hours going in circles, trying to find why logic in one place was behaving so different from another place. While I'm tempted to blame the sick on this, realistically, I just don't know the frameworks being used here, so a lot of the more implicit things (such as these seemingly arbitrary property names) just weren't clicking for me.&lt;/p&gt;
&lt;p&gt;Sleeping on it seemed to do the trick - when I looked again this morning, tracing line for line, I finally spotted it, and it was such an easy change, it was embarrassing. But it was finished, so all that was left to figure out was publishing to Github-pages, which &lt;em&gt;should&lt;/em&gt; have been easy, except it took me a while more flailing to figure out the right way to get npm to use my personal access token.&lt;/p&gt;
&lt;p&gt;Finally, though, it's here - &lt;a href="https://jenrsparks.github.io/dndspells/"&gt;The Spells of D&amp;amp;D 5E&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After spamming the same nerdy friends, a couple items were flagged for possible improvements:
- Linking to spell descriptions / details
- Additional classes added&lt;/p&gt;
&lt;p&gt;The former should be easy, and the latter... well, as &lt;a href="http://github.com/dukeflipchart"&gt;dukeflipchart&lt;/a&gt; said, it's time consuming. But maybe worth it.&lt;/p&gt;</content><category term="Updates"></category><category term="React"></category></entry><entry><title>DevOps World | Jenkins World 2019</title><link href="/devops-world-jenkins-world-2019.html" rel="alternate"></link><published>2019-08-18T13:48:00-05:00</published><updated>2019-08-18T13:48:00-05:00</updated><author><name>Jen Sparks</name></author><id>tag:None,2019-08-18:/devops-world-jenkins-world-2019.html</id><summary type="html">&lt;p&gt;This week, I had the fortunate opportunity to attend DevOps World / Jenkins World. Cloudbees, the "headline sponsor," shaped the event with a couple of interesting announcements, and several technologies dominated the sessions Tuesday through Thursday.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;First and foremost: &lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt; is leading the game, and is now considered the de facto …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This week, I had the fortunate opportunity to attend DevOps World / Jenkins World. Cloudbees, the "headline sponsor," shaped the event with a couple of interesting announcements, and several technologies dominated the sessions Tuesday through Thursday.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;First and foremost: &lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt; is leading the game, and is now considered the de facto winner of the container wars (at least to date). For those folks who haven't made the move yet, this is step zero. Without it, one is not going to get so many of the gains that come from the rest of the tools, and ultimately is trailing too far behind to be considered relavent. This is one of those cases where it's time to catch up or become obsolete.&lt;/p&gt;
&lt;p&gt;The next takeaway: we really are landing in a level of maturity wherein the tools can help us to start building our pipelines without needing to know the programmatic components. &lt;a href="https://jenkins-x.io/"&gt;Jenkins X&lt;/a&gt; offers end to end pipeline generation, giving us a framework for CI/CD that plugs straight into our git system and providing GitOps and environment promotion baked right in. While built and touted for it's native Kubernetes integration, it turns out it has equal integration for non-K8S using a feature flag to swap over to classic support. Even if the project isn't quite ready to move to Kubernetes, it can at least make the jump to Jenkins X, using the classic buildpack, and work its way incrementally over to the newer technologies in time.&lt;/p&gt;
&lt;p&gt;Of course, there are the sponsored products getting highlights that I'm excited to learn more about. Cloudbees has recently made some acquisitions, specifically &lt;a href="https://electric-cloud.com/"&gt;Electric Cloud&lt;/a&gt; and &lt;a href="https://rollout.io/"&gt;Rollout&lt;/a&gt;. With these new features added to their portfolio, it was the perfect time to announce &lt;a href="https://www.cloudbees.com/press/cloudbees-presents-software-delivery-management-sdm-vision-turning-software-delivery-core"&gt;Software Delivery Management&lt;/a&gt;, or SDM for short. Mind you, it was &lt;a href="https://www.cloudbees.com/blog/introducing-software-delivery-management"&gt;mentioned back in April 2019&lt;/a&gt;, however the new tools that have been added have helped solidify the offering even more.&lt;/p&gt;
&lt;p&gt;There's not a lot of clarity as to how it might integrate with the rest of your toolchain if you're working outside of the Cloudbees ecosystem. More likely than not, this is an angle to bring you all the way in - the appeal of an end to end offering to bring all of your processes into a unified experience, with a consoldiated data lake. When more information comes out, however, I'm hoping that we see a better integration available so that the rest of the best-in-class offerings are accepted as piecemeal connections into the unifying system.&lt;/p&gt;
&lt;p&gt;The appearance of the &lt;a href="https://cd.foundation/"&gt;Continuous Delivery Foundation&lt;/a&gt;, or CDF, actually helps to encourage that exact culture of interoperability, letting the best-in-class tools thrive alongside each other. There's a lot of maturity in this industry to come, and I'm hopeful for it all.&lt;/p&gt;</content><category term="Programming"></category><category term="CI/CD"></category></entry><entry><title>Splunk REST Calls in Search</title><link href="/splunk-rest-calls-in-search.html" rel="alternate"></link><published>2019-06-30T12:00:00-05:00</published><updated>2019-06-30T12:00:00-05:00</updated><author><name>Jen Sparks</name></author><id>tag:None,2019-06-30:/splunk-rest-calls-in-search.html</id><summary type="html">&lt;p&gt;The Splunk REST API is a powerful thing. You can even call it in your searches using &lt;code&gt;| rest [path]&lt;/code&gt; and get back Splunk data. But what if you want to get dynamic details back, or call several endpoints, without knowing the exact URIs? Turns out, there's a &lt;em&gt;very&lt;/em&gt; awesome way …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The Splunk REST API is a powerful thing. You can even call it in your searches using &lt;code&gt;| rest [path]&lt;/code&gt; and get back Splunk data. But what if you want to get dynamic details back, or call several endpoints, without knowing the exact URIs? Turns out, there's a &lt;em&gt;very&lt;/em&gt; awesome way to do this.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;Let's say we want to get all the alerts fired on record. &lt;code&gt;/servicesNS/alerts/fired_alerts&lt;/code&gt; can provide a list of the alerts that have had events, but not the details of those events, such as times or the actions associated with the alert. So starting out with the &lt;code&gt;fired_alerts&lt;/code&gt; endpoint, we'll use the following to get all alerts that belong to someone with 'sparks' in their username:&lt;/p&gt;
&lt;p&gt;:::SPL
| rest /servicesNS/alerts/fired_alerts
| where match(author, "sparks")
| fields title author link&lt;/p&gt;
&lt;p&gt;Resulting in the following table output, since behind-the-scenes Splunk turns the REST response into a table:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;title&lt;/th&gt;
&lt;th&gt;author&lt;/th&gt;
&lt;th&gt;link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;test-alert&lt;/td&gt;
&lt;td&gt;jsparks&lt;/td&gt;
&lt;td&gt;/servicesNS/admin/search/alerts/fired_alerts/test-alert&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;test-2&lt;/td&gt;
&lt;td&gt;sparksma&lt;/td&gt;
&lt;td&gt;/servicesNS/admin/search/alerts/fired_alerts/test-2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;Caveat: I'm only showing a couple of fields here; you can find all of them at the REST API Documentation for &lt;a href="https://docs.splunk.com/Documentation/Splunk/7.3.0/RESTREF/RESTsearch#alerts.2Ffired_alerts"&gt;fired_alerts&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Notice the &lt;code&gt;link&lt;/code&gt; column? This is huge; this means we now know the REST API endpoint for that specific alert, and moreover every alert listed in the response body. So how can we make a call to the results of one search to get the contents of the next?&lt;/p&gt;
&lt;p&gt;This is where the &lt;a href="https://docs.splunk.com/Documentation/Splunk/7.3.0/SearchReference/Map"&gt;map&lt;/a&gt; command comes into play. The &lt;code&gt;map&lt;/code&gt; command lets us build a subsearch for &lt;em&gt;each row&lt;/em&gt; in the table we already have, meaning that here we can iterate through the various alert entries and get their details back.&lt;/p&gt;
&lt;p&gt;So if we add the &lt;code&gt;map&lt;/code&gt; command, here's how we can get each of the detailed records back:&lt;/p&gt;
&lt;p&gt;:::SPL
| rest /servicesNS/alerts/fired_alerts
| where match(author, "sparks")
| map search="| rest $link$"
| fields savedsearch_name actions sid&lt;/p&gt;
&lt;p&gt;What we're really doing here is executing a command that says, for each resulting entry listed in the fired alerts, call the &lt;code&gt;alerts/fired_alerts/{name}&lt;/code&gt; endpoint and get me the details.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; The results that come back are &lt;em&gt;only&lt;/em&gt; the detail records; those first records we had have been lost in the mapping process.&lt;/p&gt;
&lt;p&gt;|savedsearch_name|actions|sid|
|test-alert|email|rt_scheduler__admin__search__test-alert_at_1351181001_5.31|
|test-2|email,webhook|rt_scheduler__admin__search__test-2_at_1351181023_6.19|
|test-alert|email|rt_scheduler__admin__search__test-alert_at_1351181009_7.42|&lt;/p&gt;
&lt;p&gt;It's worth noting that there are some limitations; map cannot be used after an &lt;code&gt;append&lt;/code&gt; command, and it defaults to only making a max of 10 calls (thought this is configurable). As always, I strongly recommend checking out the documentation to understand exactly what you're working with and how to fine tune each command. Additional details can be found at the &lt;a href="https://docs.splunk.com/Documentation/Splunk/7.3.0/RESTREF/RESTsearch#alerts.2Ffired_alerts.2F.7Bname.7D"&gt;fired alerts details&lt;/a&gt; documentation.&lt;/p&gt;
&lt;p&gt;The implications of this functionality are pretty fantastic. For this scenario alone, I can build a dashboard, for instance, that lets me see the details of all of the triggered alerts that Splunk has historically (24 hours by default). Or I can build an alert that sends a page if we've had a certain number of alerts triggered overall in a certain period of time. The variances are limited only by the use cases you can think of.&lt;/p&gt;
&lt;p&gt;On top of that, if you're using a search API call to get your results, this expands the capabilities of manipulation and server-side processing. The cost of making several API calls for sets of results, especially if your Splunk server is somewhere quite remote or you're trying to minimize network traffic, can really be reduced. Assuming your Splunk instance can take more load, you're actually reducing the load on your local process and shifting it upstream. (Of course, depending on how you do this, your Splunk server admins might have something to say about it.)&lt;/p&gt;
&lt;p&gt;I've got a few places where this is going to help streamline some of my processing, taking me from ~20+ API calls down to 2. Sure, the load is shifted and not necessarily removed, but in my case, that makes a huge difference in performance. After all, Splunk is very good at handling its own API calls and turning them into something useable.&lt;/p&gt;</content><category term="Programming"></category><category term="Splunk"></category></entry><entry><title>Pixelbook mCover Hard Shell Case Mod</title><link href="/pixelbook-mcover-hard-shell-case-mod.html" rel="alternate"></link><published>2019-06-02T15:28:00-05:00</published><updated>2019-06-02T15:28:00-05:00</updated><author><name>Jen Sparks</name></author><id>tag:None,2019-06-02:/pixelbook-mcover-hard-shell-case-mod.html</id><summary type="html">&lt;p&gt;Since I got my Pixelbook a while back, I've wanted a case that would work for both the laptop and tablet mode. Unfortunately, they really don't seem to exist. The closest I found was the &lt;a href="https://www.amazon.com/dp/B07D6DPD2N/ref=cm_sw_em_r_mt_dp_U_fKb9Cb3267RRT"&gt;mCover Hard Shell Case for 12.3" Google Pixelbook Chromebook&lt;/a&gt;, but even this wouldn't let …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Since I got my Pixelbook a while back, I've wanted a case that would work for both the laptop and tablet mode. Unfortunately, they really don't seem to exist. The closest I found was the &lt;a href="https://www.amazon.com/dp/B07D6DPD2N/ref=cm_sw_em_r_mt_dp_U_fKb9Cb3267RRT"&gt;mCover Hard Shell Case for 12.3" Google Pixelbook Chromebook&lt;/a&gt;, but even this wouldn't let you fold it all the way closed for a table mode. At best, you could take the bottom panel off, which required some juggling, and still didn't close right because of the top cover.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;Buried within the comments, though, was a gracious 5-star review along with his instructions on how to &lt;a href="https://www.amazon.com/gp/customer-reviews/R3G383RE7SZH5A/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;amp;ASIN=B07D6DPD2N"&gt;modify the case to use in tablet mode&lt;/a&gt;. Brilliant! But for a person like me, I wanted more than a couple photos; I was hoping for some detailed directions on how to do it so I didn't ruin my case.&lt;/p&gt;
&lt;p&gt;So today, over a month after getting the case, I broke out my dremels (yes, I have more than one) and started getting to work. First step was to measure, align, and make marks for the modifications.&lt;/p&gt;
&lt;p&gt;Tools Used:
* Dremel Oscillating MultiMax MM30
* Oscillating blade
* Sanding Pad attachment&lt;/p&gt;
&lt;p&gt;The cuts need to happen in three places: the top cover's back and the two openings required for the bottom cover's buttons. I took some quick photos of the measurement points for reference, too.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Location&lt;/th&gt;
&lt;th&gt;Measurement&lt;/th&gt;
&lt;th&gt;Purpose&lt;/th&gt;
&lt;th&gt;Photo&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Top cover&lt;/td&gt;
&lt;td&gt;1.4cm from back&lt;/td&gt;
&lt;td&gt;Allows tablet fold to close more completely&lt;/td&gt;
&lt;td&gt;&lt;img alt="Top Cover Reference" src="" title="{static}images/2019-06-02-measured-top-edge.jpg"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bottom cover left side, aligned with volume rocker&lt;/td&gt;
&lt;td&gt;1.2cm - 3.7cm from second clip to back&lt;/td&gt;
&lt;td&gt;Creates opening for volume rocker&lt;/td&gt;
&lt;td&gt;&lt;img alt="Volume Rocker Reference" src="" title="{static}images/2019-06-02-measured-bottom-button-1.jpg"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bottom cover left side, aligned with power button&lt;/td&gt;
&lt;td&gt;14.2cm-15.6cm from second clip to back&lt;/td&gt;
&lt;td&gt;Creates opening for power button&lt;/td&gt;
&lt;td&gt;&lt;img alt="Power Button Reference" src="" title="{static}images/2019-06-02-measured-bottom-button-2.jpg"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Once you're really &lt;em&gt;totally&lt;/em&gt; sure that the measurements are right (remember, measure twice, cut once), go ahead and get started cutting those pieces off and out. This was the truly terrifying piece, and I'm not sure I had the perfect tools for this. Plus, I don't have surgeon hands; there's a reason I write &lt;em&gt;software&lt;/em&gt;, after all.&lt;/p&gt;
&lt;p&gt;The top cover was an easy cut, straight across. I struggled a bit to do a truly straight line, so once the cut was made, I went back with the sanding attachment at the roughest grit and leveled things out. The finer grits were used to soften the plastic and mitigate any chance of scratching the laptop itself. That was a real concern, especially because the clips to keep it from sliding were gone now.&lt;/p&gt;
&lt;p&gt;The button notches really had me nervous, and i'm certain this was the wrong tool for this part. Fortunately, I'm stubborn. I cut into the side on each marked point, carving a roughly .3cm line with each pass. Once the main lines were cut, I went back in between them and carved out some of the center plastic, which would eventually be removed. Since there wasn't a good way to cut into the side, instead I ended up cutting lots of individual cuts upward, which then gave me smaller slivers of plastic that could be more easily removed. Eventually I was able to come in from the side and cut each of these little pieces off very carefully without doing much damage to the remaining case. These, too, were sanded down to mitigate any sort of scratch-risk to the laptop, however I was unable to buff out the damage I had done from my upward cuts. From above, you can easily see the lines from where the blade went too far in and left permanent grooves on the underside. It almost looks like a shatter-impact from this angle. Fortunately, this will always be underneath or behind what I'm looking at, so it's probably the best place this could've gone wrong.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Cover Damage near Volume Rocker" src="" title="{static}images/2019-06-02-after-button-notch-damage.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Here's a quick view of the minor gap when folded in tablet mode; while it's annoying, it's worlds better than before the modification.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tablet Mode View" src="" title="{static}images/2019-06-02-after-tablet-mode-gap.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Taking a look at the result as a whole, even with my shortcomings aside, it's definitely not perfect; the bottom cover doesn't fit quite right over the keyboard, causing some unpleasant bulging where the cover should lock in more cleanly. In addition, the top panel no longer has clips on all four sides, which means it can just slide off with a relatively minimal amount of force. I accidentally discovered this the first time I picked it up - only slightly terrifying.&lt;/p&gt;
&lt;p&gt;| The power button opening sits lifted up, not cleanly aligning the clip.|&lt;img alt="Power Button Side Gap" src="" title="{static}images/2019-06-02-after-button-side-gap.jpg"&gt;|
| The volume rocker opening seems flush, but as it moves towards the back, the cover raises up again.|&lt;img alt="Volume Rocker Side Gap" src="" title="{static}images/2019-06-02-after-button-side-gap-2.jpg"&gt;|
|Seen when flipped upside down, in the process of moving to tablet mode.|&lt;img alt="Back View of Top Cover" src="" title="{static}images/2019-06-02-after-back-coverage-gap.jpg"&gt;|&lt;/p&gt;
&lt;p&gt;Frankly, I had a clue about all of these going in. But this is a $20 case, and I feel like I've gotten some serious added value with less than an hour of work, including the photos I took.&lt;/p&gt;
&lt;p&gt;Now I just have to resist the urge to buy a couple more in complementing colors and swapping them constantly.&lt;/p&gt;</content><category term="Hobbies"></category><category term="Chromebook"></category></entry><entry><title>Memorial Weekend</title><link href="/memorial-weekend.html" rel="alternate"></link><published>2019-05-27T12:35:00-05:00</published><updated>2019-05-27T12:35:00-05:00</updated><author><name>Jen Sparks</name></author><id>tag:None,2019-05-27:/memorial-weekend.html</id><summary type="html">&lt;p&gt;It's been a crazy couple of weeks. The kids are officially on summer break, the house has had half a dozen projects to wrap, and work has ramped in an unexpected way. This weekend is supposed to be about rest for me, a couple days to catch up on R …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's been a crazy couple of weeks. The kids are officially on summer break, the house has had half a dozen projects to wrap, and work has ramped in an unexpected way. This weekend is supposed to be about rest for me, a couple days to catch up on R&amp;amp;R, maybe binge on TV.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;Instead, we replaced a screen in a screendoor, mounted two televisions (office and a bedroom), finished assembling the monitor arm for my desk, and spent 5 brutal hours shopping for a loveseat before finding what would work in the space we have. Here we are, two out of three days into the weekend gone, and I'm both physically fried and a little bit mentally blank.&lt;/p&gt;
&lt;p&gt;I've got several projects in my head that I want to work on, but right now, I suspect they're going to have to go on the backburner for a bit longer. For the sake of keeping myself honest, though, I'll at least throw them on a list to remind me later.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modify the Pixelbook case to support tablet mode (see &lt;a href="https://www.amazon.com/gp/customer-reviews/R3G383RE7SZH5A/ref=cm_cr_dp_d_rvw_ttl?ie=UTF8&amp;amp;ASIN=B07D6DPD2N"&gt;customer review comment&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Start writing our D&amp;amp;D stories (having just started a new campaign)&lt;/li&gt;
&lt;li&gt;Work on Splunk articles here&lt;/li&gt;
&lt;li&gt;Progress on a work-related side project I'm hoping to opensource (details later if I can)&lt;/li&gt;
&lt;li&gt;Read any (and all) of the piles of books and comics stacking up:&lt;/li&gt;
&lt;li&gt;Comics:&lt;ul&gt;
&lt;li&gt;&lt;a href="https://digital.darkhorse.com/series/815/american-gods"&gt;American Gods by Neil Gaiman, P Craig Russell, &amp;amp; Scott Hampton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dccomics.com/comics/cover-2018/cover-1"&gt;Cover by Brian Michael Bendis &amp;amp; David Mack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Firefly_(Boom!_Studios_comics)"&gt;Firefly from Boom! Studios&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Books:&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/His_Dark_Materials"&gt;His Dark Materials by Phillip Pullman&lt;/a&gt; (a personal re-read)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Norse_Mythology_(book)"&gt;Norse Mythology by Neil Gaiman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tor.com/2019/01/16/book-announcements-radicalized-cory-doctorow/"&gt;Radicalized by Cory Doctorow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On a more personal note, I've been considering starting a new fitness routine, but I'm feeling some serious hesitation. The biggest concern is that this is another moneygrab with no real value; I have specific limitations I'm trying to work within, and while this says that it's accommodating to that, all the sample videos and details I've found look like just another exercise program. And since all the cost is up front, if it doesn't work, I'm just out some cash for no real gain.&lt;/p&gt;
&lt;p&gt;My alternative is to just force myself into my own known routines - stretches, cardio, better eating, more consistent sleep schedule. I have the tools, worked hard to get the knowledge to do this over the last couple years. The question is, does the structure of the program add enough value and new information to justify the money? Or is it just another template to provide more of the same stuff I already know? The most annoying part is that I won't know for sure unless I give in and spend the money.&lt;/p&gt;
&lt;p&gt;Meanwhile, I'm watching my husband dig in on a 4K HDR playthrough of &lt;a href="https://en.wikipedia.org/wiki/Horizon_Zero_Dawn"&gt;Horizon: Zero Dawn&lt;/a&gt;, one of my favorite games. The added 5.1.2 surround sound we've installed, plus the 65" TV, has been an absolutely beautiful improvement to a game I adored on my own playthrough. I'm hoping I get to live the journey through his playthrough, rather vicariously, as I read or craft or otherwise ride along, as we often do.&lt;/p&gt;</content><category term="Updates"></category><category term="Reading"></category><category term="Home Improvement"></category></entry><entry><title>Favicon Creation</title><link href="/favicon-creation.html" rel="alternate"></link><published>2019-04-27T15:00:00-05:00</published><updated>2019-04-27T15:00:00-05:00</updated><author><name>Jen Sparks</name></author><id>tag:None,2019-04-27:/favicon-creation.html</id><summary type="html">&lt;p&gt;OK, I realize I just posted, but I'm having way too much fun getting this cleaned up with some of the finer touches. I decided to get myself a proper favicon for the website, and happily found myself at &lt;a href="https://favicon.io/"&gt;favicon.io&lt;/a&gt;. It turns out, they've got the same fonts available …&lt;/p&gt;</summary><content type="html">&lt;p&gt;OK, I realize I just posted, but I'm having way too much fun getting this cleaned up with some of the finer touches. I decided to get myself a proper favicon for the website, and happily found myself at &lt;a href="https://favicon.io/"&gt;favicon.io&lt;/a&gt;. It turns out, they've got the same fonts available as &lt;a href="https://fonts.google.com/"&gt;fonts.google.com&lt;/a&gt;, making it extremely easy to create an icon that matches the site.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;Really easily, I simply chose the text for the icon ('S' is for Sparks folks), then chose colors that matched the theming of the site. In this case, &lt;code&gt;#ac4142&lt;/code&gt; is our sidebar color, and &lt;code&gt;#ebd1d1&lt;/code&gt; is the color that the sidebar text shows up with. I picked my matching font - &lt;a href="https://fonts.google.com/selection?selection.family=Cinzel+Decorative"&gt;Cinzel Decorative&lt;/a&gt; - set the background to 'circle,' and played around with the font size until I landed at the perfect alignment for the letter against the circle.&lt;/p&gt;
&lt;p&gt;Here's our result:&lt;/p&gt;
&lt;p&gt;&lt;img alt="android-chrome" src="/articles/images/android-chrome-192x192.png"&gt;&lt;/p&gt;
&lt;p&gt;Honestly, the absolute hardest part of this whole thing was getting the images scp'd over to the Codenvy site, which it turns out is because I set my port flag to &lt;code&gt;-p&lt;/code&gt; instead of &lt;code&gt;-P&lt;/code&gt;.&lt;/p&gt;</content><category term="Technology"></category><category term="Web"></category></entry><entry><title>Reboot 2019 - Jekyll, Codenvy, and CSS</title><link href="/reboot-2019-jekyll-codenvy-and-css.html" rel="alternate"></link><published>2019-04-27T12:00:00-05:00</published><updated>2019-04-27T12:00:00-05:00</updated><author><name>Jen Sparks</name></author><id>tag:None,2019-04-27:/reboot-2019-jekyll-codenvy-and-css.html</id><summary type="html">&lt;p&gt;Here we are, nearly 2 years later. I've changed jobs (and actually my career as a whole), gotten married, and a dozen other smaller but equally important things. And yet this place has been relative neglected, always a consideration but not something I've put the time into picking back up …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here we are, nearly 2 years later. I've changed jobs (and actually my career as a whole), gotten married, and a dozen other smaller but equally important things. And yet this place has been relative neglected, always a consideration but not something I've put the time into picking back up.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;So first thing's first - the site has been ported into a fork of &lt;a href="https://github.com/poole/hyde"&gt;pool/hyde&lt;/a&gt;, with some customization of the fonts in use. In particular, we've got &lt;a href="https://fonts.google.com/selection?selection.family=Cinzel+Decorative"&gt;Cinzel Decorative&lt;/a&gt;, &lt;a href="https://fonts.google.com/selection?selection.family=Cinzel"&gt;Cinzel&lt;/a&gt;, and &lt;a href="https://fonts.google.com/selection?selection.family=Raleway"&gt;Raleway&lt;/a&gt;, three beautiful fonts from &lt;a href="https://fonts.google.com"&gt;Google Fonts&lt;/a&gt;. I've additionaly made some shifts to get things up to the latest version of Github.io support -- moving from pygments to rouge in particular mitigated several critical errors keeping the site from running.&lt;/p&gt;
&lt;p&gt;Mind you, a lot of this came about because I've finally gotten a new computer - my 2013 laptop, while still running, just isn't cutting it, and can't be pulled from power anymore. In addition, it doesn't always like to start, or just gives a black screen on startup, which is downright terrifying. So I broke down and got myself a Pixelbook - circa 2017, these guys are still killer, and with the Chrome OS paradigm, everything lives in the cloud. But that means... Where's the runtime environment?&lt;/p&gt;
&lt;p&gt;I've managed to stumble my way into &lt;a href="https://codenvy.io"&gt;Codenvy&lt;/a&gt; with Jekyll, surprising even myself in that I've never really worked with Docker, and it seems like a lot of the initial love for it has faded in the last year. Google searches only got me part of the way, and the rest was a fumble trying to get things working.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step one:&lt;/strong&gt; a custom stack to run Jekyll. Turns out, you need something with at least 2.4.0 Ruby, plus jekyll and maybe bundler, depending on the site structure. So my stack definition came out to be:&lt;/p&gt;
&lt;p _="%" endhighlight&gt;{% highlight unix %}
FROM eclipse/ruby_rails
RUN sudo gem install jekyll
EXPOSE 4000&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step two:&lt;/strong&gt; create the workspace, including specifying your projects from Github. What's great is that in my case, I ended up renaming my original github.io site as &lt;code&gt;sitename_old&lt;/code&gt;, then forking hyde to be &lt;code&gt;sitename&lt;/code&gt;. Fortunately I had the foresight to create my Codenvy account with Github credentials, so that authentication was trivialized.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step three:&lt;/strong&gt; get it working! Realisically, that meant running the forked hyde site, getting the right gems installed locally, and resolving the startup errors that happened from progression of the github.io support (specifically moving the highlighter engine from pygments to rouge).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step four:&lt;/strong&gt; copy over the posts, resolve the errors, run, and validate. In this case, I got lucky - most of the posts were clean and didn't require any sort of tweaks on their yaml definitions. I'm not thrilled with having the whole darned post showing up instead of snippets, but there's lots of time for tweaks and adjustments.&lt;/p&gt;
&lt;p&gt;There are a ton more little additions I've got, both completed and in the works. My favorite so far is &lt;a href="https://github.com/tholman/github-corners"&gt;tholman's github-corners&lt;/a&gt; -- you'll see him up at the top (where you can find the link to the source of this site). It's purely SVG based, and with a couple tweaks, I was able to get it to follow the dynamic theme of the site as well!&lt;/p&gt;
&lt;p&gt;More coming soon!&lt;/p&gt;</content><category term="Updates"></category><category term="Chromebook"></category></entry><entry><title>Threaded Woes</title><link href="/threaded-woes.html" rel="alternate"></link><published>2017-06-24T00:00:00-05:00</published><updated>2017-06-24T00:00:00-05:00</updated><author><name>Jen Sparks</name></author><id>tag:None,2017-06-24:/threaded-woes.html</id><summary type="html">&lt;p&gt;I'd been banging my head on these logging entries for days. Our recently added audit logs had a frustrating phenomenon; these unrelated strings were ending up in the "object" field when we shouldn't have a value populated there at all.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;Working with Spring, mind you, the class looked something like …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'd been banging my head on these logging entries for days. Our recently added audit logs had a frustrating phenomenon; these unrelated strings were ending up in the "object" field when we shouldn't have a value populated there at all.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;Working with Spring, mind you, the class looked something like this:&lt;/p&gt;
&lt;p&gt;{% highlight java %}
{% raw %}
@Component
public class AuditLogger {
    @Autowired
    private Logger logger;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;logSuccessfulLogin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;attemptedUsername&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;addCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;login&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;addUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attemptedUsername&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;addResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;logFailedLogin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;attemptedUsername&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;addCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;login&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;addUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attemptedUsername&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;addResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;failed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;logNonExistantAccessAttempt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;addCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;non_existant_access&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;addUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;addObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;addResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;failed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="c1"&gt;-- private helper methods&lt;/span&gt;

&lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;addObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;MDC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;object&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;addCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;MDC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;command&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;addResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;MDC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;result&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;addUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;MDC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;private&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Everything&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="n"&gt;itself&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;populated&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;MDC&lt;/span&gt; &lt;span class="n"&gt;based&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt;
  &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;log4j&lt;/span&gt; &lt;span class="n"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;nothing&lt;/span&gt; &lt;span class="n"&gt;actually&lt;/span&gt; &lt;span class="n"&gt;needs&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;explicitly&lt;/span&gt; &lt;span class="n"&gt;logged&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;
  &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p _="%" endhighlight&gt;}
{% endraw %}&lt;/p&gt;
&lt;p&gt;Unfortunately, the log entries were coming out with values from prior log entries, as such:&lt;/p&gt;
&lt;p _="%" endhighlight&gt;{% highlight log %}
{% raw %}
2017/06/25 09:02:12 | INFO | command = login, result = success, user = jenny98
2017/06/25 09:02:19 | INFO | command = login, result = failure, user = hacker5
2017/06/25 09:02:25 | INFO | command = non_existant_access, result = failed, user = robert.d.johnson, object = /api/lookup?id=1103725
2017/06/25 09:02:27 | INFO | command = login, result = success, user = orangeuser12, object = /api/lookup?id=1103725
{% endraw %}&lt;/p&gt;
&lt;p&gt;Notice the last line, which has the same 'object' shown as the prior log line, even though the 'login' type log entry (populated by 'logSuccessfulLogin' method) doesn't add an 'object' attribute at all.&lt;/p&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/MDC.html"&gt;MDC&lt;/a&gt; is a thread-safe log4j utility, but it persists for the life of a thread, much like Java's thread-local. Of course, if the thread goes back into a threadpool and gets reused, there's nothing to clear out the contents of the MDC, which means that the previously added attributes stick around and are logged, even though they aren't logically relevant.&lt;/p&gt;
&lt;p&gt;The fix here for me was easier than perhaps I expected; all I had to do was clear out the contents of the MDC after the logging was complete.&lt;/p&gt;
&lt;p&gt;{% highlight java %}
{% raw %}
private void log() {
  // Everything in the log line itself is populated from the MDC based on
  // the log4j configuration; nothing actually needs to be explicitly logged here
  logger.info("");&lt;/p&gt;
&lt;p _="%" endhighlight&gt;// Clear out the MDC contents so that if the thread is reused by the thread pool,
  // or if the logging is called for a second time within the same thread,
  // the MDC is in a clean state.
  MDC.clear();
}
{% endraw %}&lt;/p&gt;</content><category term="Programming"></category><category term="Java"></category></entry><entry><title>Technology and Personal Ventures</title><link href="/technology-and-personal-ventures.html" rel="alternate"></link><published>2017-06-19T00:00:00-05:00</published><updated>2017-06-19T00:00:00-05:00</updated><author><name>Jen Sparks</name></author><id>tag:None,2017-06-19:/technology-and-personal-ventures.html</id><summary type="html">&lt;p&gt;Today, some organizational and internal turmoil reminded me that I am not as settled in my position as I necessarily assume. There is, at the drop of a hat, always the opportunity to move to a different position, or find some new project for which my current toolset is not …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today, some organizational and internal turmoil reminded me that I am not as settled in my position as I necessarily assume. There is, at the drop of a hat, always the opportunity to move to a different position, or find some new project for which my current toolset is not the best solution. For all I know, I could be asked to help write control software for an Android based piece of hardware tomorrow, or find myself knee-deep in a full application rewrite next month.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;So instead of being settled, comfortable, one might even say &lt;em&gt;lazy&lt;/em&gt;, I've decided to at least dip a toe in the waters of some programming languages and frameworks that I've not yet encountered. To start, I'll be working my way through the &lt;a href="https://try.kotlinlang.org"&gt;Kotlin Koans&lt;/a&gt;, then perhaps even stretching myself into the &lt;a href="http://adventofcode.com/"&gt;Advent of Code&lt;/a&gt; exercises.&lt;/p&gt;
&lt;p&gt;On a more personal note, my family and I have spent an exorbitant amount of time preparing my prior house to put on the market to sell. We've finally reached the point that the finishing touches are being put on things, like final paint touch-ups and getting photos shot for the listing, with an open house planned for next weekend. I'm ever hopeful that we've covered the biggest ticket items and anything that comes up for inspections or the buyer's demands are nominal and can be handled by hiring someone for petty cash. Regardless, the stress and added overhead of selling a house has, and continues, to take its toll on my family. I'm hoping we can shed this burden as soon as possible and get back to being a happy one-house-owned family.&lt;/p&gt;
&lt;p&gt;With any luck, I'll sneak some time between all the craziness to work on personal projects, learn Kotlin, and keep making myself better. Until next time,&lt;/p&gt;
&lt;p&gt;Jen&lt;/p&gt;</content><category term="Updates"></category></entry><entry><title>Rebooting the System</title><link href="/rebooting-the-system.html" rel="alternate"></link><published>2017-05-25T00:00:00-05:00</published><updated>2017-05-25T00:00:00-05:00</updated><author><name>Jen Sparks</name></author><id>tag:None,2017-05-25:/rebooting-the-system.html</id><summary type="html">&lt;p&gt;It's been a while, to say the least. Three years, as a matter of fact. I had big plans for this place - projects, a dumping ground for programming exploration and demos and typographical experimentation.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;I've taken the first pass at some cleanup, and I've now got the site running locally …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's been a while, to say the least. Three years, as a matter of fact. I had big plans for this place - projects, a dumping ground for programming exploration and demos and typographical experimentation.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;I've taken the first pass at some cleanup, and I've now got the site running locally for me in Docker. It's going to be a lot easier to keep up with the maintenance aspect, at least. Writing content, on the other hand, is another challenge, but with any luck, I'll dig up my old project list and get things moving again.&lt;/p&gt;</content><category term="Updates"></category></entry><entry><title>Brewing, Baking, and OCD</title><link href="/brewing-baking-and-ocd.html" rel="alternate"></link><published>2014-07-20T00:00:00-05:00</published><updated>2014-07-20T00:00:00-05:00</updated><author><name>Jen Sparks</name></author><id>tag:None,2014-07-20:/brewing-baking-and-ocd.html</id><summary type="html">&lt;h2&gt;Saturday Brewing&lt;/h2&gt;
&lt;p&gt;The &lt;a href="/late-night-adventures-with-homebrew.html"&gt;Amber After Midnight&lt;/a&gt; batch, once ready to drink, was a knock-out hit. We agreed that the Chinook flavor wasn't necessarily the best profile, though I got some serious lovers of the profile it built. After some consideration of what our Local Homebrew Store had in stock as …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Saturday Brewing&lt;/h2&gt;
&lt;p&gt;The &lt;a href="/late-night-adventures-with-homebrew.html"&gt;Amber After Midnight&lt;/a&gt; batch, once ready to drink, was a knock-out hit. We agreed that the Chinook flavor wasn't necessarily the best profile, though I got some serious lovers of the profile it built. After some consideration of what our Local Homebrew Store had in stock as far as hops go, we settled on a Sterling for bittering and Fuggle to get an earthy, nutty, and lightly flowery profile. While it's extremely basic, it's also hitting the core hops to get a good grasp on our groundings so we can build up. Plus, they didn't list the rotational hops on their site and it was around 11pm when we were doing this.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;With some guidance from my fellow brewers Jason and Ben, we've also been getting a better understanding of the advantages and disadvantages of using a malt extract. Instead of using an LME Amber, we shifted to doubling the LME Light and the Crystal 40&amp;deg;L both.&lt;/p&gt;
&lt;p&gt;I'm thrilled with the outcome of our recipe, not to mention how easy the brew day itself is starting to get. The steps are feeling more routine, less scramble to check what's next and more overall comfort in the brew itself.&lt;/p&gt;
&lt;p&gt;On the other hand, we did prove once and for all that I need to stop indoor brewing - the hops aroma filling the house gave me a wicked migraine that knocked me out for about 5 hours solid. Fortunately, sleep cures most migraines, so I was able to bounce back pretty well.&lt;/p&gt;
&lt;p&gt;This does, however, mean that I'll be investing in a turkey fryer and propane setup soon, with the hopes of shiftig to a full boil while I'm at it. (Thus far it's been a partial boil, which I worry has been hurting us on the efficiency of our sugar retention.) I've not yet started shopping for it, but I suspect it's going to be a goodly investment, which means it won't be happening this week, at least.&lt;/p&gt;
&lt;h2&gt;Baking with the Leftovers&lt;/h2&gt;
&lt;p&gt;After finishing a brew day, one thing has always bothered me: tons of left over grain. It's called "spent grain," mind you, and it turns out you can use it in baking. I knew this from our first brew, so when we did the Irish Red (years ago and out of a kit! gasp!), a friend and I spent the extra half hour to make up a few batches of bread using the spent grain. But you have to use flour, too, and so it feels awfully wasteful only rescuing about a cup of the spent grain for every loaf of bread made.&lt;/p&gt;
&lt;p&gt;A few months ago, I stumbled upon a fantastic site called &lt;a href="http://brooklynbrewshop.com/"&gt;Brooklyn Brew Shop&lt;/a&gt;. Specifically, the &lt;a href="http://brooklynbrewshop.com/themash/category/spentgrainchef/"&gt;Spent Grain Chef&lt;/a&gt; section is what got my attention; instead of using the wet grain, the author has actually dried and ground the grain into flour and used it as the basis for recipes! I've been excited to give this a try, so today my oven was filled with cookie sheets covered in the spent grain, spread out and running at 170&amp;deg;F for hours on end. It took a few tries to get it mixed up and quit sticking to my utensils, but I think it's finally dried out and ready to be milled down into a flour.&lt;/p&gt;
&lt;p&gt;If you'd like to see how it's done, check out the recipe for &lt;a href="http://brooklynbrewshop.com/themash/recipe-spent-grain-flour/"&gt;Spent Grain Flour&lt;/a&gt;. I'm particularly looking forward to making the &lt;a href="http://brooklynbrewshop.com/themash/recipe-spent-grain-peanut-butter-cookies/"&gt;Spent Grain Peanut Butter Cookies&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;OCD Exposed&lt;/h2&gt;
&lt;p&gt;Anyone who knows me can tell you I have a few ticks. Among them is the need to be orderly in certain things (though sadly not my house as a whole!). At the prompting of a few friends, I rediscovered Perler Beads, those little beads we put on pegboards and ironed as kids for no good reason but got a world of joy from.&lt;/p&gt;
&lt;p&gt;My friends have purchased and sorted out several buckets of the beads, and in helping them sort, I was suddenly in OCD heaven. After we subsequently made a few 8-bit video game characters for coasters, I was sold; I had to have my own set. So I hit up my favorite place to buy things online and promptly ordered a bin of 11,000 pieces - and as of today, they've been sorted into two boxes, 30 colors in all.&lt;/p&gt;
&lt;p&gt;&lt;img alt="30 beads organized carefully in rainbow order" src="/articles/images/2014-07-20-beads.jpg"&gt;&lt;/p&gt;
&lt;p&gt;What's awful is that now they're all assembled, I'm finding myself at a loss of what to make. The boards for them are particularly huge, so 30x30 beads comes out to something like 6"x6". While that may seem like a lot, imagine a 30x30 pixel image. Our 8-bit adventures led us to make a relatively small Pokeball and Mudkip (a Pokemon for those of you unfamiliar), but even those are large for coasters.&lt;/p&gt;
&lt;p&gt;My original plan was to mock up the eventual design for my bottle cap collection, getting a nice prototype done. In addition, I'd make some beer-themed coasters. Unfortunately, each of these are larger than my 6"x6" pegboard - meaning that while I can do the prototype, I don't think either of them will be functional as designs for coasters. Perhaps I can go the route of wall decorations or something 3D instead?&lt;/p&gt;</content><category term="Hobbies"></category><category term="Homebrew"></category><category term="Baking"></category></entry><entry><title>Spent Grain Cookies</title><link href="/spent-grain-cookies.html" rel="alternate"></link><published>2014-07-20T00:00:00-05:00</published><updated>2014-07-20T00:00:00-05:00</updated><author><name>Jen Sparks</name></author><id>tag:None,2014-07-20:/spent-grain-cookies.html</id><summary type="html">&lt;p&gt;After making my spent grain flour last weekend, I was simply aching to get some baking in with it - not to mention the friends bugging me to make them. I decided on the &lt;a href="http://brooklynbrewshop.com/themash/recipe-spent-grain-peanut-butter-cookies/"&gt;Spent Grain Peanut Butter Cookies&lt;/a&gt;, recipe courtesy of &lt;a href="http://brooklynbrewshop.com/"&gt;Brooklyn Brew Shop&lt;/a&gt;'s &lt;a href="http://brooklynbrewshop.com/themash"&gt;The Mash&lt;/a&gt;.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;Upon mixing the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;After making my spent grain flour last weekend, I was simply aching to get some baking in with it - not to mention the friends bugging me to make them. I decided on the &lt;a href="http://brooklynbrewshop.com/themash/recipe-spent-grain-peanut-butter-cookies/"&gt;Spent Grain Peanut Butter Cookies&lt;/a&gt;, recipe courtesy of &lt;a href="http://brooklynbrewshop.com/"&gt;Brooklyn Brew Shop&lt;/a&gt;'s &lt;a href="http://brooklynbrewshop.com/themash"&gt;The Mash&lt;/a&gt;.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;Upon mixing the ingredients, I was convinced the batter needed water, or milk, or maybe another egg. The consistency was just all wrong, but I decided to trust the recipe and forged ahead.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Batter" src="" title="{static}images/images/2014-07-28-batter.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Success! Now to just make the cookies - this was going decievingly easy. And did I mention this was a double batch? There would be more cookies than we knew what to do with - fortunately I had some social events coming up, not to mention coworkers more than willing to 'help out.'&lt;/p&gt;
&lt;p&gt;Once the cookies were all properly aligned on the sheets (and it took two rounds in the oven), I grabbed a fork to do the cross-hatch on the tops. Unfortunately, my silverware is real silver, and has tiny prongs, so I didn't get the gorgeous results like Brooklyn Brew Shop did, but that didn't make them taste any less good.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Cookies, Pre-Baked" src="" title="{static}images/2014-07-28-cookies-prebaked.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately I haven't gotten any good photos of the finished product, as they came out of the oven just as it was time to head to bed, and the next few days I was knocked out by my latest case of Strep Throat. Fortunately I'm now on the up-turn, but not enough so that I want to risk infecting the batch. Once I'm a few days further past, I'll try to get a photo - assuming they aren't all gone.&lt;/p&gt;</content><category term="Hobbies"></category><category term="Baking"></category></entry><entry><title>Late Night Adventures with Homebrew</title><link href="/late-night-adventures-with-homebrew.html" rel="alternate"></link><published>2014-07-05T00:00:00-05:00</published><updated>2014-07-05T00:00:00-05:00</updated><author><name>Jen Sparks</name></author><id>tag:None,2014-07-05:/late-night-adventures-with-homebrew.html</id><summary type="html">&lt;p&gt;I know I've mentioned I do too much, but this one felt like taking it to an extreme. Since there weren't enough hours in the day, my last brew started at around midnight to help Mike with his first batch. It was a traditional American Amber, based on the recipe …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I know I've mentioned I do too much, but this one felt like taking it to an extreme. Since there weren't enough hours in the day, my last brew started at around midnight to help Mike with his first batch. It was a traditional American Amber, based on the recipe from Brew Your Own's &lt;a href="http://byo.com/stories/beer-styles/item/1459-the-10-easiest-beer-styles"&gt;The 10 Easiest Beer Styles&lt;/a&gt;' Outback Amber Ale. Instead of the Crystal 135&amp;deg; L, we picked up ¾ lbs of Special B. The resulting tastiness was a pretty traditional amber, but what really threw me was the grassy flavor at the end; turns out the Chinook hops carried some herbal notes that neither of us were expecting, but it's grown on us both.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;The recipe, if you care to check it out, can be found on Brewtoad under the name &lt;a href="https://www.brewtoad.com/recipes/amber-after-midnight"&gt;Amber After Midnight&lt;/a&gt;. I generally keep &lt;a href="https://www.brewtoad.com/users/42827"&gt;all my recipes&lt;/a&gt;. here, so if you're interested, feel free to browse around. I also recommend the site in general; while it's somewhat young feature-wise, I have reason to believe that as it goes forward it will begin to gain some maturity and further adoption.&lt;/p&gt;
&lt;p&gt;All that said, the brewing bug has really taken hold of me as of late. The next batch I make is planned to take advantage of some Mosaic hops I picked up during our supply run for the amber. We looked to find a good way to compliment it, and it turns out a brettanomyces yeast can do some very fun, funky things, so I intend to play a bit.&lt;/p&gt;
&lt;p&gt;The initial five-gallon boil (though if I can't get the gear, I might have to do a partial boil) will first use a steep of Crystal 40&amp;deg; L and Victory malts, then a boil with an additional 6.5 lbs of dry malt extract. The Mosaic is going to be late hopped for all 2 oz - 0.5 oz at 30 minutes remaining, 15 minutes remaining, 5 minutes remaining, and then 5 minutes during a flame-out whirlpool.&lt;/p&gt;
&lt;p&gt;Once the boil is done, this is where it gets tricky. The 5 gallon batch (whether a full boil or partial topped off with water) will be split off into a 3-gallon carboy and two 1-gallon carboys. The 3-gallon carboy and one of the 1-gallon carboys will get a traditional California Ale yeast (WLP001); the other 1-gallon carboy will get Brettanomyces Bruxellensis Trois (WLP644).&lt;/p&gt;
&lt;p&gt;I expect the 3-gallon batch to fly - probably a 4-8 day fermentation, assuming it's in the basement at about 68&amp;deg; F. We'll bottle that right away, then sit to bottle carbonate for a good 2-3 weeks. Flavor profiles on this should be focused on the Mosaic hops - grapefruit and peach, perhaps, though I've seen reports of a ton of different flavor profiles from this single hop build. Regardless, I'm certain the hops will shine through. Estimated ABV is 5.5% - 6.0%. Estimated yield is 30 12-oz bottles.&lt;/p&gt;
&lt;p&gt;The 1-gallon batch with the WLP001 is going to finish equally quickly, and then we'll pitch a non-started pack of the WLP644 for a secondary start. At this point it will get moved to a 70&amp;deg; F to let it get more of the funk aromas. From the preliminary research I've done, this is a mixed-fermentation wherein the brett will overtake the existing yeast and push it far past the point that the WLP001 could take it. I would expect another 2 weeks, finishing between 6.5% AND 7.5% ABV with a yield of approximately 10 bottles.&lt;/p&gt;
&lt;p&gt;The 100% brett batch I expect to start slow and take approximately 2-3 weeks, if not a bit longer, assuming it's sitting at 70&amp;deg; F for the full duration. Flavors on this are likely to be all over the place - fruity for sure, with a more robust funk than the mixed batch. By not taking it too warm and keeping the aeration low for the whole process, the resulting flavors and aromas will be a relatively straightforward fruitiness with a hint of funk, as opposed to the heavy funk levels triggered by higher temperatures.&lt;/p&gt;
&lt;p&gt;The one thing to keep in mind is that I need to do the starter for the WLP644 early - as much as 10 days early so we've got a good culture to work with. Since it's only a 1-gallon batch, I actually don't expect this to be critical, but always better safe than sorry.&lt;/p&gt;
&lt;p&gt;I'll be sure to report back in once the batches are started; I'm anxious to get there, and I'm sure it'll be happening soon.&lt;/p&gt;</content><category term="Hobbies"></category><category term="Homebrew"></category></entry><entry><title>Way Too Much</title><link href="/way-too-much.html" rel="alternate"></link><published>2014-06-07T00:00:00-05:00</published><updated>2014-06-07T00:00:00-05:00</updated><author><name>Jen Sparks</name></author><id>tag:None,2014-06-07:/way-too-much.html</id><summary type="html">&lt;p&gt;It occurs to me; I do way too much. Take this week for instance: I worked extra a few extra hours, brewed after the sun went down, spent some hours rehabbing this site, and even beta testing a new version of a mobile game. That said, I've been considering the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It occurs to me; I do way too much. Take this week for instance: I worked extra a few extra hours, brewed after the sun went down, spent some hours rehabbing this site, and even beta testing a new version of a mobile game. That said, I've been considering the kinds of things I want to talk about here, and it's far more broad than simply programming.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;Here are a few of the things I'll hope to be discussing here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Programming Theory &amp;amp; Application&lt;/li&gt;
&lt;li&gt;Beer Brewing&lt;/li&gt;
&lt;li&gt;Video &amp;amp; Tabletop Games&lt;/li&gt;
&lt;li&gt;Knitting &amp;amp; Crochet&lt;/li&gt;
&lt;li&gt;Random Personal Projects&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think a fair goal for myself is to pick something to post about, every week - hopefully something new I've learned, or some new technique. At the least, I'll go for a progress update on one of the various in-work projects, but I'm going to set a personal expectation of making it more about what I've learned through that progress.&lt;/p&gt;
&lt;p&gt;With that, I have a family to help move, so I'd better get moving!&lt;/p&gt;</content><category term="Updates"></category></entry><entry><title>Mapping a List to Numbered Fields</title><link href="/mapping-a-list-to-numbered-fields.html" rel="alternate"></link><published>2014-06-03T00:00:00-05:00</published><updated>2014-06-03T00:00:00-05:00</updated><author><name>Jen Sparks</name></author><id>tag:None,2014-06-03:/mapping-a-list-to-numbered-fields.html</id><summary type="html">&lt;p&gt;One of my oh-so-favorite (&lt;em&gt;cough&lt;/em&gt;) things to do lately in Java has been mapping one type of object to another with no particular transformation. Among these has been the act of taking a list and shifting its contents into a series of fields, depending on how many items are availble …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of my oh-so-favorite (&lt;em&gt;cough&lt;/em&gt;) things to do lately in Java has been mapping one type of object to another with no particular transformation. Among these has been the act of taking a list and shifting its contents into a series of fields, depending on how many items are availble in the list. It's been driving me nuts to consider using nested if statements, as such:&lt;/p&gt;
&lt;!--more--&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ArbitraryTarget&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ArbitraryObject&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setItem3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setItem2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setItem1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I'm sorry, but this is ugly, dense, and generally gross. I needed another solution. It finally occurred to me while staring at the conditions that I could easily just leverage a switch statement; after all, all I was doing was considering an int value repeatedly. Let's see how we can do this a little more elegantly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ArbitraryTarget&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ArbitraryObject&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;maxSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;NumberUtils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maxSize&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setItem3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setItem2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setItem1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Fortunately, I even have Apache Commons functionality to make it a tad bit cleaner, if a bit hackish for repeating &lt;code&gt;3&lt;/code&gt; twice. I could just as easily have done a ternary statement:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;maxSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It occurs to me that, while perhaps not as clean of a solution, this could be made to be infinitely scalable using reflection. Unfortunately, especially once we get into a higher number of fields (item256?!), there would likely be a performance hit, so it somehow seems prudent to back up and reconsider the design decision behind having numbered fields.&lt;/p&gt;</content><category term="Programming"></category><category term="Java"></category></entry><entry><title>Beginning the Journey</title><link href="/beginning-the-journey.html" rel="alternate"></link><published>2014-05-11T00:00:00-05:00</published><updated>2014-05-11T00:00:00-05:00</updated><author><name>Jen Sparks</name></author><id>tag:None,2014-05-11:/beginning-the-journey.html</id><summary type="html">&lt;p&gt;Over the last 6 years I've worked in the I.T. industry, I've often wanted to share the lessons I've learned, but never had an outlet to share these lessons. In an attempt to change this, I'm kicking off this site with the hopes of writing about the types of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Over the last 6 years I've worked in the I.T. industry, I've often wanted to share the lessons I've learned, but never had an outlet to share these lessons. In an attempt to change this, I'm kicking off this site with the hopes of writing about the types of things I encounter, both previously and moving forward.&lt;/p&gt;
&lt;p&gt;I look forward to the chance to share what I learn, and with any luck, people can save themselves some time, too.&lt;/p&gt;
&lt;p&gt;Until next time,&lt;/p&gt;
&lt;p&gt;~ Jen&lt;/p&gt;</content><category term="Updates"></category></entry></feed>